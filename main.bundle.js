(()=>{"use strict";var e={75636:(e,t,n)=>{n.r(t)},35302:(e,t,n)=>{n.r(t),n.d(t,{default:()=>r});const r='<h2>Panel Animation</h2>\r\n\r\n<p>\r\n    <code>&lt;DuxPanel&gt;</code> supports CSS animation. All modern evergreen browsers (such as Firefox and Chrome) support CSS animation as well as\r\n    Internet Explorer 10 or later. Simple entry and exit animations are built-in as well as support for keyframes and the CSS shorthand animation\r\n    syntax.\r\n</p>\r\n\r\n<h4>Entry and Exit Animations</h4>\r\n\r\n<p>\r\n    <code>&lt;DuxPanel&gt;</code> offers optional entry and exit animations. The following properties control animations when a panel is opening and\r\n    closing. <code>slideInFrom</code> and <code>slideOutFrom</code> forces <code>fadeIn</code> and <code>fadeOut</code> to <strong>true</strong>.\r\n</p>\r\n\r\n<table class="table">\r\n    <thead>\r\n        <tr>\r\n            <th>Property</th>\r\n            <th>Default</th>\r\n            <th>Description</th>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        <tr>\r\n            <td>fadeIn</td>\r\n            <td>false (true in DuxDialog)</td>\r\n            <td>True if the panel and the backdrop fade in</td>\r\n        </tr>\r\n        <tr>\r\n            <td>fadeOut</td>\r\n            <td>false (true in DuxDialog)</td>\r\n            <td>True if the panel and the backdrop fade out</td>\r\n        </tr>\r\n        <tr>\r\n            <td>slideInFrom</td>\r\n            <td>none ("top" in DuxDialog)</td>\r\n            <td>"top", "left", "bottom", or "right"</td>\r\n        </tr>\r\n        <tr>\r\n            <td>slideOutTo</td>\r\n            <td>none ("top" in DuxDialog)</td>\r\n            <td>"top", "left", "bottom", or "right"</td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n\r\n<h4>CSS Animation</h4>\r\n\r\n<p>\r\n    For more complete control over animation, CSS animations are supported. The <code>animation</code> property contains an animation shorthand\r\n    referencing <code>@keyframes</code> specified in the CSS.\r\n</p>\r\n\r\n<div class="alert alert-warning">\r\n    If your animation modifies the CSS <code>top</code> or <code>left</code> properties, users will not be able to drag the panel as long as the\r\n    <code>animation</code> property to DuxPanel is non-empty.\r\n</div>\r\n'},3499:(e,t,n)=>{n.r(t),n.d(t,{default:()=>r});const r="<h2>DuxPanel Basics</h2>\r\n\r\n<p>\r\n    The <code>&lt;DuxPanel&gt;</code> component implements a visual panel in the web page with a border and optional title bar. There are many options\r\n    controlling behavior, appearance, and how the user is allowed to interact with the panel. Following is a short example showing\r\n    <code>&lt;DuxPanel&gt;</code> at its simplest.\r\n</p>\r\n"},7025:(e,t,n)=>{n.r(t),n.d(t,{default:()=>r});const r="<h2>DuxDialog</h2>\r\n\r\n<p>\r\n    <code>DuxDialog</code> is a specialized version of <code>DuxPanel</code> with some defaults typically used in dialogs as well as buttons for the\r\n    user to interact with the dialog. If all you need is a dialog with typical buttons, take a look at <code>DuxOkDialog</code> or\r\n    <code>DuxYesNoDialog</code>. The following DuxPanel properties are recognized by DuxDialog.\r\n</p>\r\n\r\n<p>\r\n    By default, DuxDialog sets a few sensible properties in DuxPanel. The close button is not shown in the title bar. Also, the dialog cannot be\r\n    dismissed by clicking in the backdrop outside the dialog. The dialog will slide in from the top and slide out the top and position itself\r\n    centered, 50 pixels from the top. All of these can be overridden if desired.\r\n</p>\r\n\r\n<table class=\"table\">\r\n    <thead>\r\n        <tr>\r\n            <th>Property</th>\r\n            <th>Default</th>\r\n            <th>Description</th>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        <tr>\r\n            <td>buttons</td>\r\n            <td>(none)</td>\r\n            <td>An array of buttons to be displayed along the bottom of the dialog. See the buttons topic, below.</td>\r\n        </tr>\r\n        <tr>\r\n            <td>onButton</td>\r\n            <td>(none)</td>\r\n            <td>A function to call when the user clicks on a button in the dialog. The function receives the label of the button.</td>\r\n        </tr>\r\n        <tr>\r\n            <td>icon</td>\r\n            <td>(none)</td>\r\n            <td>This is a React component displayed along the left side of the dialog with a 10 pixel right margin.</td>\r\n        </tr>\r\n        <tr>\r\n            <td>buttonClassName</td>\r\n            <td>(none)</td>\r\n            <td>The default CSS class(es) supplied to the dialog's buttons. See the buttons topic, below.</td>\r\n        </tr>\r\n        <tr>\r\n            <td>statusMsg</td>\r\n            <td>(none)</td>\r\n            <td>If present, this string will be displayed in a <code>&lt;span&gt;</code> tag, left-aligned in the button bar.</td>\r\n        </tr>\r\n        <tr>\r\n            <td>statusMsgClassName</td>\r\n            <td>(none)</td>\r\n            <td>The class name(s) applied to the <code>&lt;span&gt;</code> tag for the status message.</td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n\r\n<h4>Dialog Buttons</h4>\r\n\r\n<p>\r\n    The dialog buttons are specified using an array. Each button in the array can be specified with a string (the button label), or a JavaScript\r\n    object that specifies additional properties, or as a React component. Take a look at this example.\r\n</p>\r\n\r\n<pre>\r\n    const buttons = [\r\n        'My Button',  // just the button's label\r\n        {\r\n            label: 'Other Button',\r\n            onClick: () => alert('Other Button Clicked'),\r\n            className: 'btn btn-warning'\r\n        },\r\n        &lt;button className=\"btn btn-danger\" onClick={() => alert(\"Just Don't\")}&gt;Dangerous Button&lt;/button&gt;\r\n    ];\r\n</pre>\r\n\r\n<p>\r\n    By default, buttons are evenly spaced along the bottom of the dialog, aligned to the right. Buttons specified as just a button label or button\r\n    objects that do not specify a CSS class use the class from the\r\n    <strong>buttonClassName</strong> property. Button objects can use the following properties.\r\n</p>\r\n\r\n<table class=\"table\">\r\n    <thead>\r\n        <tr>\r\n            <th>Property</th>\r\n            <th>Default</th>\r\n            <th>Description</th>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        <tr>\r\n            <td>label</td>\r\n            <td>(required)</td>\r\n            <td>The button label</td>\r\n        </tr>\r\n        <tr>\r\n            <td>onClick</td>\r\n            <td>(none)</td>\r\n            <td>\r\n                Function to call when the button is clicked. If not specified, the DuxDialog <strong>onButton</strong>\r\n                function is called.\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td>className</td>\r\n            <td>(none)</td>\r\n            <td>CSS class(es) for the <code>&lt;button&gt;</code> component</td>\r\n        </tr>\r\n        <tr>\r\n            <td>align</td>\r\n            <td>left</td>\r\n            <td>Align the button along the bottom left or bottom right of the dialog</td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n\r\n<h4>Example</h4>\r\n"},61246:(e,t,n)=>{n.r(t),n.d(t,{default:()=>r});const r='<h2>DuxPanel Property Reference</h2>\r\n\r\n<table class="table">\r\n    <thead>\r\n        <tr>\r\n            <th>Property</th>\r\n            <th>Default Value</th>\r\n            <th>Description</th>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        <tr>\r\n            <td>allowClose</td>\r\n            <td>true</td>\r\n            <td>\r\n                If true, a close button is placed on the right side of the title bar. Note, this property is ignored if <strong>title</strong> is\r\n                empty.\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td>allowDrag</td>\r\n            <td>true</td>\r\n            <td>If true, the user is permitted to drag the panel by the title bar.</td>\r\n        </tr>\r\n        <tr>\r\n            <td>animation</td>\r\n            <td>(none)</td>\r\n            <td>This is a CSS animation shorthand format, such as <code>"cool-animation .25s ease"</code>.</td>\r\n        </tr>\r\n        <tr>\r\n            <td>center</td>\r\n            <td>true</td>\r\n            <td>\r\n                If true, the panel is centered horizontally and vertically in the browser\'s viewport. Note, the viewport is the visible portion of the\r\n                document body. If the viewport is resized, the panel is moved to keep it centered.\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td>clickToDismiss</td>\r\n            <td>true</td>\r\n            <td>\r\n                If true, the <strong>onClose</strong> function is called if the user clicks outside the panel. This property is ignored if\r\n                <strong>modal</strong> is false.\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td>fadeIn</td>\r\n            <td>true</td>\r\n            <td>\r\n                If true, the panel\'s opacity is faded from 0 to 1 using a CSS animation when the <strong>show</strong>\r\n                property is changed from false to true.\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td>fadeOut</td>\r\n            <td>true</td>\r\n            <td>\r\n                If true, the panel\'s opacity is faded from 1 to 0 using a CSS animation when the <strong>show</strong>\r\n                property is changed from true to false.\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td>height</td>\r\n            <td>(none)</td>\r\n            <td>\r\n                The panel height. This property can be a number (in pixels) or a percentage of the browser viewport width such as "50%" or an object\r\n                of viewport breakpoints. See the topic on responsive panels for more information. If this property is missing, the panel will be sized\r\n                tall enough to accommodate its contents.\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td>left</td>\r\n            <td>(none)</td>\r\n            <td>\r\n                The left edge of the panel. This property can be a number (in pixels) or a percentage of the browser viewport width such as "50%" or\r\n                an object of viewport breakpoints. See the topic on responsive panels for more information. This parameter can be omitted if\r\n                <strong>center</strong> is true.\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td>modal</td>\r\n            <td>true</td>\r\n            <td>\r\n                If true, a backdrop covers the entire viewport preventing the user from interacting with the part of the web page visible outside the\r\n                panel.\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td>onClose</td>\r\n            <td>(none)</td>\r\n            <td>This function is called when the user clicks the close button on the title bar.</td>\r\n        </tr>\r\n        <tr>\r\n            <td>onEnterPressed</td>\r\n            <td>(none)</td>\r\n            <td>\r\n                This function is called when the user presses the Enter key, but only if the panel is the most recently opened. This property is\r\n                ignored if <strong>modal</strong> is false.\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td>onEscPressed</td>\r\n            <td>(none)</td>\r\n            <td>\r\n                This function is called when the user presses the Escape key, but only if the panel is the most recently opened. This property is\r\n                ignored if <strong>modal</strong> is false.\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td>show</td>\r\n            <td>false</td>\r\n            <td>If true, the panel is rendered in the DOM and is visible. If false, the panel is removed from the DOM.</td>\r\n        </tr>\r\n        <tr>\r\n            <td>slideInFrom</td>\r\n            <td>(none)</td>\r\n            <td>Can be one of <code>"top"</code>, <code>"right"</code>, <code>"bottom"</code>, or <code>"left"</code>.</td>\r\n        </tr>\r\n        <tr>\r\n            <td>slideOutTo</td>\r\n            <td>(none)</td>\r\n            <td>Can be one of <code>"top"</code>, <code>"right"</code>, <code>"bottom"</code>, or <code>"left"</code>.</td>\r\n        </tr>\r\n        <tr>\r\n            <td>title</td>\r\n            <td>(none)</td>\r\n            <td>The title to show in the panel\'s title bar. If this property is missing or empty, no title bar is rendered.</td>\r\n        </tr>\r\n        <tr>\r\n            <td>top</td>\r\n            <td>(none)</td>\r\n            <td>\r\n                The top edge of the panel. This property can be a number (in pixels) or a percentage of the browser viewport width such as "50%" or an\r\n                object of viewport breakpoints. See the topic on responsive panels for more information. This parameter can be omitted if\r\n                <strong>center</strong> is true.\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td>width</td>\r\n            <td>(required)</td>\r\n            <td>\r\n                The panel width. This property can be a number (in pixels) or a percentage of the browser viewport width such as "50%" or an object of\r\n                viewport breakpoints. See the topic on responsive panels for more information.\r\n            </td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n'},1773:(e,t,n)=>{n.r(t),n.d(t,{default:()=>r});const r="<h2>Getting Started</h2>\r\n\r\n<p>\r\n    If you're the ready, fire, aim type (aren't all programmers?), you should find everything you need on this page and the page on Panel Basics to\r\n    start using DuxPanel.\r\n</p>\r\n\r\n<h4>Installation</h4>\r\n\r\n<pre>\r\n    npm install @cojam/duxpanel\r\n</pre>\r\n\r\n<p>\r\n    You also need to link to the <code>duxpanel.css</code> file in the <code>node_modules/duxpanel/website/dist/</code>\r\n    directory.\r\n</p>\r\n\r\n<pre>\r\n    &lt;link rel=\"stylesheet\" href=\"duxpanel.css\"/&gt;\r\n</pre>\r\n\r\n<p>or</p>\r\n\r\n<pre>\r\n    @import '~duxpanel/website/dist/duxpanel.css';\r\n</pre>\r\n\r\n<div class=\"alert alert-warning\">\r\n    You might be tempted to use the duxpanel.css file in your project with webpack and an import statement. This will work as long as you don't need\r\n    to override any of the CSS in the file.\r\n</div>\r\n\r\n<h4>Browser Requirements</h4>\r\n\r\n<p>\r\n    DuxPanel doesn't place any special requirements on browser support. It has been tested on the modern evergreen browsers (Chrome and Firefox) as\r\n    well as Internet Explorer 10 and 11. It definitely won't work on Internet Explorer 8 or earlier.\r\n</p>\r\n"},45181:(e,t,n)=>{n.r(t),n.d(t,{default:()=>r});const r='<div id="main-header" class="clearfix">\r\n    \x3c!-- from http://getdrawings.com/free-duck-clipart --\x3e\r\n    <img id="duxpanel-logo" src="duxpanel.png" />\r\n    <h2>Welcome To DuxPanel!</h2>\r\n    <span id="main-header-caption"> A set of draggable React panels and dialogs </span>\r\n</div>\r\n\r\n<p>\r\n    DuxPanel is set of responsive, mobile-ready React components that implement draggable and fixed-position panels and dialogs. The panels and\r\n    dialogs can be modal and respond to key presses like Escape and Enter.\r\n</p>\r\n\r\n<h4>Why Another Panel Framework?</h4>\r\n\r\n<p>DuxPanel offers the following notable features.</p>\r\n\r\n<ul>\r\n    <li>Panels and dialogs are draggable or fixed-position</li>\r\n    <li>Responsive and mobile-ready</li>\r\n    <li>Modal or non-modal</li>\r\n    <li>Stackable</li>\r\n    <li>Responds to Escape and Enter</li>\r\n    <li>Convenience dialogs such as Ok/Cancel, Yes/No, and progress.</li>\r\n    <li>All panels and dialogs can be styled with CSS</li>\r\n</ul>\r\n\r\n<h4>GitHub Repository</h4>\r\n\r\n<p>\r\n    This project\'s GitHub can found at\r\n    <a href="https://github.com/cojamru/duxpanel">https://github.com/cojamru/duxpanel</a>.\r\n</p>\r\n'},36988:(e,t,n)=>{n.r(t),n.d(t,{default:()=>r});const r='<h2>DuxOkDialog</h2>\r\n\r\n<p>\r\n    The <code>&lt;DuxOkDialog&gt;</code> component serves as a convenient dialog when all you need is an Okay (and optionally a Cancel) button. In\r\n    addition to the properties recognized by <code>DuxPanel</code> and <code>DuxDialog</code>, the following are properties recognized by DuxOkDialog.\r\n</p>\r\n\r\n<table class="table">\r\n    <thead>\r\n        <tr>\r\n            <th>Property</th>\r\n            <th>Default Value</th>\r\n            <th>Description</th>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        <tr>\r\n            <td>allowClose</td>\r\n            <td>true</td>\r\n            <td>True if a close button is rendered on the right side of the title bar.</td>\r\n        </tr>\r\n        <tr>\r\n            <td>allowEnter</td>\r\n            <td>true</td>\r\n            <td>If true, if the user presses Enter it is handled as if they clicked the Okay button.</td>\r\n        </tr>\r\n        <tr>\r\n            <td>allowEsc</td>\r\n            <td>true</td>\r\n            <td>If true, if the user presses Escape it is handled as if they clicked the Cancel button.</td>\r\n        </tr>\r\n        <tr>\r\n            <td>cancelClassName</td>\r\n            <td>(none)</td>\r\n            <td>The CSS class(es) used for the Cancel button.</td>\r\n        </tr>\r\n        <tr>\r\n            <td>okClassName</td>\r\n            <td>(none)</td>\r\n            <td>The CSS class(es) used for the Okay button.</td>\r\n        </tr>\r\n        <tr>\r\n            <td>okDisabled</td>\r\n            <td>false</td>\r\n            <td>If true, the Okay button is disabled.</td>\r\n        </tr>\r\n        <tr>\r\n            <td>onCancel</td>\r\n            <td>(none)</td>\r\n            <td>Called when the user clicks the Cancel button.</td>\r\n        </tr>\r\n        <tr>\r\n            <td>onOk</td>\r\n            <td>(none)</td>\r\n            <td>Called when the user clicks the Okay button.</td>\r\n        </tr>\r\n        <tr>\r\n            <td>shouldClose</td>\r\n            <td>(none)</td>\r\n            <td>\r\n                If present, this function is called when the user clicks the Okay button. It returns true if the user is allowed to close the dialog\r\n                with the Okay button. This can be used to verify the user has completed a necessary interaction in the dialog. For example, a checkbox\r\n                to accept terms.\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td>showCancel</td>\r\n            <td>false</td>\r\n            <td>If true, a Cancel button is rendered to the right of the Okay button.</td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n\r\n<h4>Example</h4>\r\n'},52063:(e,t,n)=>{n.r(t),n.d(t,{default:()=>r});const r='<h2>DuxProgressDialog</h2>\r\n\r\n<p>\r\n    The <code>&lt;DuxProgressDialog&gt;</code> component displays a progress dialog for potentially long operations. A progress bar and abort button\r\n    are optional. Furthermore, the dialog can delay opening for operations that are sometimes, but not always long such as web service calls.\r\n</p>\r\n\r\n<table class="table">\r\n    <thead>\r\n        <tr>\r\n            <th>Property</th>\r\n            <th>Default Value</th>\r\n            <th>Description</th>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        <tr>\r\n            <td>min</td>\r\n            <td>0</td>\r\n            <td>The minimum value of the progress bar</td>\r\n        </tr>\r\n        <tr>\r\n            <td>max</td>\r\n            <td>0</td>\r\n            <td>The maximum value of the progress bar</td>\r\n        </tr>\r\n        <tr>\r\n            <td>value</td>\r\n            <td>0</td>\r\n            <td>The current value of the progress bar. It is rendered as a percentage between min and max.</td>\r\n        </tr>\r\n        <tr>\r\n            <td>allowAbort</td>\r\n            <td>false</td>\r\n            <td>If true, an abort button is rendered in the dialog. The onAbort property is required if true.</td>\r\n        </tr>\r\n        <tr>\r\n            <td>onAbort</td>\r\n            <td>(none)</td>\r\n            <td>This function is called if the user clicks the abort button.</td>\r\n        </tr>\r\n        <tr>\r\n            <td>showAfter</td>\r\n            <td>0</td>\r\n            <td>\r\n                For operations which are not always long, but can potentially take a while (such as web service calls), the dialog can delay showing\r\n                with this property. A timer is started when the show property transitions from false to true. Once the timer elapses, the dialog is\r\n                displayed if show is still true. This property is the number of milliseconds to delay. If this property is 0, the dialog is displayed\r\n                immediately when show becomes true.\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td>abortButtonClassName</td>\r\n            <td>(none)</td>\r\n            <td>The CSS class(es) to apply to the abort <code>&lt;button&gt;</code></td>\r\n        </tr>\r\n        <tr>\r\n            <td>progressComponent</td>\r\n            <td>(none)</td>\r\n            <td>\r\n                This is a React component to render the progress bar. If not present, no progress bar is rendered. For web sites using Twitter\r\n                Bootstrap 4, <code>&lt;ProgressBarBS4&gt;</code> is supplied. See below for an example of use. The supplied component is passed the\r\n                <strong>min</strong>, <strong>max</strong>, and <strong>value</strong> properties.\r\n            </td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n\r\n<h4>Examples</h4>\r\n'},87639:(e,t,n)=>{n.r(t),n.d(t,{default:()=>r});const r='<h2>Responsive Panels</h2>\r\n\r\n<p>\r\n    <code>&lt;DuxPanel&gt;</code> is designed to be responsive from Desktop browsers down to mobile devices. This is accomplished using a set of\r\n    sizing breakpoints similar to Twitter\'s <a href="http://www.getbootstrap.com">Bootstrap</a> CSS framework.\r\n</p>\r\n\r\n<h4>Sizing Breakpoints</h4>\r\n\r\n<p>\r\n    There are five sizing breakpoints, defined to be exactly the same as Bootstrap. This simplifies web page design if your site is already using\r\n    Bootstrap. These breakpoints are:\r\n</p>\r\n\r\n<table class="table">\r\n    <thead>\r\n        <tr>\r\n            <th>Breakpoint</th>\r\n            <th>Description</th>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        <tr>\r\n            <td>xs</td>\r\n            <td>Extra small devices (portrait phones, less than 576px)</td>\r\n        </tr>\r\n        <tr>\r\n            <td>sm</td>\r\n            <td>Small devices (landscape phones, 576px and up)</td>\r\n        </tr>\r\n        <tr>\r\n            <td>md</td>\r\n            <td>Medium devices (tablets, 768px and up)</td>\r\n        </tr>\r\n        <tr>\r\n            <td>lg</td>\r\n            <td>Large devices (desktops, 992px and up)</td>\r\n        </tr>\r\n        <tr>\r\n            <td>xl</td>\r\n            <td>Extra large devices (large desktops, 1200px and up)</td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n\r\n<h4>Dimensions and Placement</h4>\r\n\r\n<p>\r\n    Panels are sized and located on the web page using one of three possible values: a number (actual pixels), a percent, or an object detailing sizes\r\n    at specific breakpoints. If an object is supplied, the size at each breakpoint can be a number (actual pixels) or a percent. These values are\r\n    recognized in the\r\n    <code>&lt;DuxPanel&gt;</code> properties of <code>left</code>, <code>top</code>, <code>width</code>, and <code>height</code>. Here are some\r\n    examples of this:\r\n</p>\r\n\r\n<pre>\r\n    &lt;DuxPanel width="50%" height={150} top={50}&gt;...&lt;/DuxPanel&gt;\r\n</pre>\r\n\r\n<p>Sizes and placement in breakpoints look like this:</p>\r\n\r\n<pre>\r\n    const width = {\r\n        xs: "100%",\r\n        sm: "90%",\r\n        md: 400   // Numbers or percents can be used for each breakpoint\r\n    };\r\n\r\n    &lt;DuxPanel width={width} ...\r\n</pre>\r\n\r\n<p>\r\n    Notice the width object is missing <code>lg</code> and <code>xl</code>. If a size breakpoint is missing from the object, the breakpoint for the\r\n    next smallest screen is used. In this case, browsers with large or extra-large windows would fall back to the medium breakpoint. If the browser\r\n    window is the <code>xs</code> size and that breakpoint is missing from the object, the next lowest breakpoint is used instead.\r\n</p>\r\n\r\n<h4>Examples</h4>\r\n\r\n<p>These two examples demonstrate a proportionally sized panel and one that changes its sizes using the responsive breakpoints.</p>\r\n'},4555:(e,t,n)=>{n.r(t),n.d(t,{default:()=>r});const r='<h2>DuxYesNoDialog</h2>\r\n\r\n<p>\r\n    The <code>&lt;DuxYesNoDialog&gt;</code> component serves as a convenient dialog when you just need to ask the user a yes / no question. The\r\n    following are properties recognized by DuxYesNoDialog.\r\n</p>\r\n\r\n<table class="table">\r\n    <thead>\r\n        <tr>\r\n            <th>Property</th>\r\n            <th>Default Value</th>\r\n            <th>Description</th>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        <tr>\r\n            <td>noClassName</td>\r\n            <td>(none)</td>\r\n            <td>The CSS class(es) used for the No button.</td>\r\n        </tr>\r\n        <tr>\r\n            <td>onNo</td>\r\n            <td>(none)</td>\r\n            <td>Called when the user clicks the No button.</td>\r\n        </tr>\r\n        <tr>\r\n            <td>onYes</td>\r\n            <td>(none)</td>\r\n            <td>Called when the user clicks the Yes button.</td>\r\n        </tr>\r\n        <tr>\r\n            <td>yesClassName</td>\r\n            <td>(none)</td>\r\n            <td>The CSS class(es) used for the Yes button.</td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n\r\n<h4>Example</h4>\r\n'},52374:(e,t,n)=>{n.r(t),n.d(t,{default:()=>r});const r='import React from \'react\';\r\nimport { DuxPanel } from \'duxpanel\';\r\n\r\nexport class Animation extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            topPanelVisible: false,\r\n            rightPanelVisible: false,\r\n            bottomPanelVisible: false,\r\n            leftPanelVisible: false,\r\n            animPanelVisible: false,\r\n            animFrame: 0, // 0 is starting position (centered), 1 is frame one, 2 is frame two\r\n        };\r\n    }\r\n\r\n    toggleTopPanel = () => {\r\n        this.setState({\r\n            topPanelVisible: !this.state.topPanelVisible,\r\n        });\r\n    };\r\n\r\n    toggleRightPanel = () => {\r\n        this.setState({\r\n            rightPanelVisible: !this.state.rightPanelVisible,\r\n        });\r\n    };\r\n\r\n    toggleBottomPanel = () => {\r\n        this.setState({\r\n            bottomPanelVisible: !this.state.bottomPanelVisible,\r\n        });\r\n    };\r\n\r\n    toggleLeftPanel = () => {\r\n        this.setState({\r\n            leftPanelVisible: !this.state.leftPanelVisible,\r\n        });\r\n    };\r\n\r\n    toggleAnimPanel = () => {\r\n        this.setState({\r\n            animPanelVisible: !this.state.animPanelVisible,\r\n            animFrame: 0,\r\n        });\r\n    };\r\n\r\n    toggleAnimFrame = () => {\r\n        let nextFrame = this.state.animFrame + 1;\r\n        if (nextFrame > 2) {\r\n            nextFrame = 0;\r\n        }\r\n        this.setState({\r\n            animFrame: nextFrame,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        let animFrameName = \'\';\r\n        let animContent = \'This panel is animated.  Dragging is possible right now.\';\r\n        switch (this.state.animFrame) {\r\n            case 1:\r\n                animFrameName = \'panel-frame-one\';\r\n                animContent = \'Panel completed animation keyframe one.  Dragging is not possible.\';\r\n                break;\r\n            case 2:\r\n                animFrameName = \'panel-frame-two\';\r\n                animContent = \'Panel completed animation keyframe two.  Dragging is not possible.\';\r\n                break;\r\n        }\r\n        if (animFrameName) {\r\n            animFrameName += \' .5s ease-in-out 0s 1 normal forwards\';\r\n        }\r\n\r\n        return (\r\n            <div style={{ paddingBottom: 50 }}>\r\n                <h4>Demonstration of Entry and Exit Animations</h4>\r\n\r\n                <div>\r\n                    <button type="button" className="btn btn-secondary mr-3" onClick={this.toggleTopPanel}>\r\n                        Sliding From Top\r\n                    </button>\r\n                    <button type="button" className="btn btn-secondary mr-3" onClick={this.toggleRightPanel}>\r\n                        Sliding From Right\r\n                    </button>\r\n                    <button type="button" className="btn btn-secondary mr-3" onClick={this.toggleBottomPanel}>\r\n                        Sliding From Bottom\r\n                    </button>\r\n                    <button type="button" className="btn btn-secondary mr-3" onClick={this.toggleLeftPanel}>\r\n                        Sliding From Left\r\n                    </button>\r\n                </div>\r\n\r\n                <DuxPanel\r\n                    show={this.state.topPanelVisible}\r\n                    title="DuxPanel Animation Demo"\r\n                    showClose={true}\r\n                    onClose={this.toggleTopPanel}\r\n                    slideInFrom="top"\r\n                    slideOutTo="top"\r\n                    allowDrag={true}\r\n                    width="50%"\r\n                    height="50%"\r\n                    top="5%">\r\n                    <p>This panel slides down from the top</p>\r\n                </DuxPanel>\r\n\r\n                <DuxPanel\r\n                    show={this.state.rightPanelVisible}\r\n                    title="DuxPanel Animation Demo"\r\n                    showClose={true}\r\n                    onClose={this.toggleRightPanel}\r\n                    slideInFrom="right"\r\n                    slideOutTo="right"\r\n                    allowDrag={true}\r\n                    width="50%"\r\n                    height="50%"\r\n                    left="45%">\r\n                    <p>This panel slides in from the right</p>\r\n                </DuxPanel>\r\n\r\n                <DuxPanel\r\n                    show={this.state.bottomPanelVisible}\r\n                    title="DuxPanel Animation Demo"\r\n                    showClose={true}\r\n                    onClose={this.toggleBottomPanel}\r\n                    slideInFrom="bottom"\r\n                    slideOutTo="bottom"\r\n                    allowDrag={true}\r\n                    width="50%"\r\n                    height="50%"\r\n                    top="45%">\r\n                    <p>This panel slides up from the bottom</p>\r\n                </DuxPanel>\r\n\r\n                <DuxPanel\r\n                    show={this.state.leftPanelVisible}\r\n                    title="DuxPanel Animation Demo"\r\n                    showClose={true}\r\n                    onClose={this.toggleLeftPanel}\r\n                    slideInFrom="left"\r\n                    slideOutTo="left"\r\n                    allowDrag={true}\r\n                    width="50%"\r\n                    height="50%"\r\n                    left="5%">\r\n                    <p>This panel slides in from the left</p>\r\n                </DuxPanel>\r\n\r\n                <h4 style={{ marginTop: 50 }}>Demonstration of CSS Animation</h4>\r\n\r\n                <button type="button" className="btn btn-secondary" disabled={this.state.animPanelVisible} onClick={this.toggleAnimPanel}>\r\n                    Open Panel In Starting Position\r\n                </button>\r\n\r\n                <DuxPanel\r\n                    show={this.state.animPanelVisible}\r\n                    title="DuxPanel Animation Demo"\r\n                    showClose={true}\r\n                    onClose={this.toggleAnimPanel}\r\n                    allowDrag={true}\r\n                    width="25%"\r\n                    height="25%"\r\n                    center={true}\r\n                    animation={animFrameName}>\r\n                    <p>{animContent} Click the Animate button to continue.</p>\r\n\r\n                    <button type="button" className="btn btn-primary" onClick={this.toggleAnimFrame}>\r\n                        Animate\r\n                    </button>\r\n                </DuxPanel>\r\n\r\n                <div className="alert alert-info mt-3">\r\n                    Click the first button to open the panel centered in the browser window. In this starting position, dragging the window is\r\n                    possible. Clicking the Animate button cycles through three positions: the starting position, and two animation keyframes. When the\r\n                    panel has completed one of these two keyframes, dragging is not possible since the <code>animation</code> property of the{\' \'}\r\n                    <code>DuxPanel</code> contains contents. Clicking the Animate button after the panel has completed keyframe two returns the panel\r\n                    back to a non-animated state, allowing dragging to happen again.\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n'},34028:(e,t,n)=>{n.r(t),n.d(t,{default:()=>r});const r='import React from \'react\';\r\nimport { DuxPanel } from \'duxpanel\';\r\n\r\nexport class Basics extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = { isOpen: false };\r\n    }\r\n\r\n    togglePanel = () => {\r\n        this.setState({ isOpen: !this.state.isOpen });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <button type="button" className="btn btn-secondary" onClick={this.togglePanel}>\r\n                    Open Panel\r\n                </button>\r\n\r\n                <DuxPanel show={this.state.isOpen} title="Basic DuxPanel" width={400} height={300} onClose={this.togglePanel}>\r\n                    <p>This is a basic DuxPanel</p>\r\n                </DuxPanel>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n'},87361:(e,t,n)=>{n.r(t),n.d(t,{default:()=>r});const r="import React from 'react';\r\nimport { DuxDialog } from 'duxpanel';\r\nimport faInfoCircle from '@fortawesome/fontawesome-free-solid/faInfoCircle';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nexport class Dialog extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = { isDialogOpen: false };\r\n    }\r\n\r\n    onDialogButton = label => {\r\n        alert(`${label} clicked (default handler)`);\r\n    };\r\n\r\n    onButton2Click = () => {\r\n        alert('Button 2 clicked (Button 2 specific handler)');\r\n    };\r\n\r\n    toggleDialog = () => {\r\n        this.setState({\r\n            isDialogOpen: !this.state.isDialogOpen,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const icon = <FontAwesomeIcon icon={faInfoCircle} className=\"text-info\" style={{ fontSize: 36 }} />;\r\n        return (\r\n            <div>\r\n                <DuxDialog\r\n                    show={this.state.isDialogOpen}\r\n                    onClose={this.toggleDialog}\r\n                    title=\"Dialog title\"\r\n                    icon={icon}\r\n                    onButton={this.onDialogButton}\r\n                    allowClose={true}\r\n                    onEscPressed={this.toggleDialog}\r\n                    width={600}\r\n                    buttonClassName=\"btn btn-primary\"\r\n                    buttons={[\r\n                        'Button 1',\r\n                        {\r\n                            label: 'Button 2',\r\n                            onClick: this.onButton2Click,\r\n                            className: 'btn btn-warning',\r\n                        },\r\n                        {\r\n                            label: 'Button Left',\r\n                            className: 'btn btn-danger',\r\n                            align: 'left',\r\n                        },\r\n                        <button\r\n                            key=\"Button 3\"\r\n                            type=\"button\"\r\n                            className=\"btn btn-success\"\r\n                            style={{ marginLeft: 10, marginRight: 10 }}\r\n                            onClick={() => alert('Button 3 clicked')}>\r\n                            Button 3\r\n                        </button>,\r\n                    ]}>\r\n                    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras varius metus enim, sit amet feugiat enim pharetra at.</p>\r\n                    <p>Click the 'x' or press Escape to close the dialog.</p>\r\n                </DuxDialog>\r\n\r\n                <button type=\"button\" className=\"btn btn-secondary\" onClick={this.toggleDialog}>\r\n                    Open Dialog\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"},50428:(e,t,n)=>{n.r(t),n.d(t,{default:()=>r});const r='import React from \'react\';\r\nimport { DuxOkDialog } from \'duxpanel\';\r\n\r\nexport class OkDialog extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isDialogOpen: false,\r\n            showAgreeMsg: false,\r\n        };\r\n    }\r\n\r\n    onCancel = () => {\r\n        this.toggleDialog();\r\n    };\r\n\r\n    onOk = () => {\r\n        this.toggleDialog();\r\n    };\r\n\r\n    shouldClose = () => {\r\n        if (!this._shouldClose.checked) {\r\n            this.setState({ showAgreeMsg: true });\r\n        }\r\n        return this._shouldClose.checked;\r\n    };\r\n\r\n    toggleDialog = () => {\r\n        this.setState({\r\n            isDialogOpen: !this.state.isDialogOpen,\r\n            showAgreeMsg: false,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <DuxOkDialog\r\n                    show={this.state.isDialogOpen}\r\n                    title="Ok Dialog Title"\r\n                    width={400}\r\n                    showCancel={true}\r\n                    onOk={this.onOk}\r\n                    onCancel={this.onCancel}\r\n                    shouldClose={this.shouldClose}\r\n                    okClassName="btn btn-primary"\r\n                    cancelClassName="btn btn-warning">\r\n                    I Agree: <input type="checkbox" ref={ref => (this._shouldClose = ref)} />\r\n                    <p>Your order is ready to submit.</p>\r\n                    {this.state.showAgreeMsg && <p className="text-danger">You must agree to the terms</p>}\r\n                </DuxOkDialog>\r\n\r\n                <button type="button" className="btn btn-secondary" onClick={this.toggleDialog}>\r\n                    Open Dialog\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n'},70997:(e,t,n)=>{n.r(t),n.d(t,{default:()=>r});const r='import React from \'react\';\r\nimport { DuxProgressDialog, ProgressBarBS4 } from \'duxpanel\';\r\n\r\nconst MyCustomProgressBar = props => (\r\n    <div>\r\n        At {props.value} out of {props.max} progress\r\n    </div>\r\n);\r\n\r\nexport class ProgressDialog extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isFixedDialogOpen: false,\r\n            isIndeterminateOpen: false,\r\n            isCustomProgressOpen: false,\r\n            fixedProgressValue: 0,\r\n            customProgressValue: 0,\r\n        };\r\n\r\n        this.progressBarFixed = ProgressBarBS4(\'progress-bar\');\r\n        this.progressBarIndeterminate = ProgressBarBS4(\'progress-bar progress-bar-striped progress-bar-animated\');\r\n    }\r\n\r\n    onCustomAbort = () => {\r\n        this.setState({\r\n            isCustomDialogOpen: false,\r\n            customProgressValue: 5,\r\n        });\r\n    };\r\n\r\n    onFixedAbort = () => {\r\n        this.setState({\r\n            isFixedDialogOpen: false,\r\n            fixedProgressValue: 5,\r\n        });\r\n    };\r\n\r\n    onIndeterminateAbort = () => {\r\n        this.setState({\r\n            isIndeterminateOpen: false,\r\n        });\r\n    };\r\n\r\n    tickCustom = () => {\r\n        const nextValue = this.state.customProgressValue + 1;\r\n        this.setState({\r\n            customProgressValue: nextValue,\r\n        });\r\n        if (nextValue <= 5) {\r\n            setTimeout(this.tickCustom, 1000);\r\n        } else {\r\n            this.setState({\r\n                isCustomDialogOpen: false,\r\n            });\r\n        }\r\n    };\r\n\r\n    tickFixed = () => {\r\n        const nextValue = this.state.fixedProgressValue + 1;\r\n        this.setState({\r\n            fixedProgressValue: nextValue,\r\n        });\r\n        if (nextValue <= 5) {\r\n            setTimeout(this.tickFixed, 1000);\r\n        } else {\r\n            this.setState({\r\n                isFixedDialogOpen: false,\r\n            });\r\n        }\r\n    };\r\n\r\n    toggleCustomDialog = () => {\r\n        this.setState({\r\n            isCustomDialogOpen: true,\r\n            customProgressValue: 0,\r\n        });\r\n\r\n        setTimeout(this.tickCustom, 1000);\r\n    };\r\n\r\n    toggleFixedDialog = () => {\r\n        this.setState({\r\n            isFixedDialogOpen: true,\r\n            fixedProgressValue: 0,\r\n        });\r\n\r\n        setTimeout(this.tickFixed, 1000);\r\n    };\r\n\r\n    toggleIndeterminateOpen = () => {\r\n        this.setState({\r\n            isIndeterminateOpen: true,\r\n        });\r\n\r\n        setTimeout(() => {\r\n            if (this.state.isIndeterminateOpen) {\r\n                this.setState({\r\n                    isIndeterminateOpen: false,\r\n                });\r\n            }\r\n        }, 10000); // 10 seconds\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <DuxProgressDialog\r\n                    show={this.state.isFixedDialogOpen}\r\n                    title="Please Wait"\r\n                    min={0}\r\n                    max={5}\r\n                    value={this.state.fixedProgressValue}\r\n                    allowAbort={true}\r\n                    onAbort={this.onFixedAbort}\r\n                    progressComponent={this.progressBarFixed}\r\n                    abortButtonClassName="btn btn-warning">\r\n                    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\r\n                </DuxProgressDialog>\r\n\r\n                <DuxProgressDialog\r\n                    show={this.state.isCustomDialogOpen}\r\n                    title="Please Wait"\r\n                    min={0}\r\n                    max={5}\r\n                    value={this.state.customProgressValue}\r\n                    allowAbort={true}\r\n                    onAbort={this.onCustomAbort}\r\n                    progressComponent={MyCustomProgressBar}\r\n                    abortButtonClassName="btn btn-warning">\r\n                    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\r\n                </DuxProgressDialog>\r\n\r\n                <DuxProgressDialog\r\n                    show={this.state.isIndeterminateOpen}\r\n                    title="Please Wait"\r\n                    min={0}\r\n                    max={1}\r\n                    value={1}\r\n                    allowAbort={true}\r\n                    onAbort={this.onIndeterminateAbort}\r\n                    showAfter={3000}\r\n                    progressComponent={this.progressBarIndeterminate}\r\n                    abortButtonClassName="btn btn-warning">\r\n                    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\r\n                </DuxProgressDialog>\r\n\r\n                <p>This progress bar demonstrates a task that takes 5 seconds to complete. The dialog opens immediately.</p>\r\n                <button type="button" className="btn btn-secondary" onClick={this.toggleFixedDialog}>\r\n                    Open Dialog\r\n                </button>\r\n\r\n                <p className="mt-5">\r\n                    This progress bar demonstrates a task that takes an unknown amount of time but usually finishes quickly. This would usually be a\r\n                    web service call. The dialog opens after 3 seconds then closes automatically after another 7 seconds if not aborted by the user.\r\n                </p>\r\n                <button type="button" className="btn btn-secondary" onClick={this.toggleIndeterminateOpen}>\r\n                    Open Dialog\r\n                </button>\r\n\r\n                <p className="mt-5">This progress bar demonstrates a custom progress bar component.</p>\r\n                <button type="button" className="btn btn-secondary" onClick={this.toggleCustomDialog}>\r\n                    Open Dialog\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n'},17026:(e,t,n)=>{n.r(t),n.d(t,{default:()=>r});const r='import React from \'react\';\r\nimport { DuxPanel } from \'duxpanel\';\r\n\r\nexport class Responsive extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = { isProportionalOpen: false, isBreakpointOpen: false };\r\n    }\r\n\r\n    toggleBreakpointPanel = () => {\r\n        this.setState({ isBreakpointOpen: !this.state.isBreakpointOpen });\r\n    };\r\n\r\n    toggleProportionalPanel = () => {\r\n        this.setState({ isProportionalOpen: !this.state.isProportionalOpen });\r\n    };\r\n\r\n    render() {\r\n        const breakpointWidths = {\r\n            xs: 400,\r\n            sm: 576,\r\n            md: 768,\r\n            lg: 992,\r\n            xl: 1100,\r\n        };\r\n\r\n        return (\r\n            <div>\r\n                <button type="button" className="btn btn-secondary" onClick={this.toggleProportionalPanel}>\r\n                    Open Proportionally Sized Panel\r\n                </button>\r\n                <button type="button" className="btn btn-secondary ml-3" onClick={this.toggleBreakpointPanel}>\r\n                    Open Breakpoint Sized Panel\r\n                </button>\r\n\r\n                <DuxPanel\r\n                    show={this.state.isProportionalOpen}\r\n                    title="Proportionally Sized DuxPanel"\r\n                    width="80%"\r\n                    height="80%"\r\n                    left="10%"\r\n                    top="10%"\r\n                    onClose={this.toggleProportionalPanel}\r\n                    allowDrag={false}\r\n                    center={false}>\r\n                    <p>\r\n                        This is a proportionally sized DuxPanel. As you resize the browser window the panel will resize to maintain a proportional\r\n                        size.\r\n                    </p>\r\n                </DuxPanel>\r\n\r\n                <DuxPanel\r\n                    show={this.state.isBreakpointOpen}\r\n                    title="Breakpoint Sized DuxPanel"\r\n                    onClose={this.toggleBreakpointPanel}\r\n                    allowDrag={false}\r\n                    center={true}\r\n                    width={breakpointWidths}>\r\n                    <p>This panel will adjust its width based on the width of the browser window. Try resizing your browser.</p>\r\n                    <div className="d-block d-sm-none">\r\n                        <h5 className="text-primary">Breakpoint xs</h5>\r\n                        Browser is less than 576px wide.\r\n                    </div>\r\n                    <div className="d-none d-sm-block d-md-none">\r\n                        <h5 className="text-primary">Breakpoint sm</h5>\r\n                        Browser is between 576px and 768px wide.\r\n                    </div>\r\n                    <div className="d-none d-md-block d-lg-none">\r\n                        <h5 className="text-primary">Breakpoint md</h5>\r\n                        Browser is between 768px and 992px wide.\r\n                    </div>\r\n                    <div className="d-none d-lg-block d-xl-none">\r\n                        <h5 className="text-primary">Breakpoint lg</h5>\r\n                        Browser is between 992px and 1200px wide.\r\n                    </div>\r\n                    <div className="d-none d-xl-block">\r\n                        <h5 className="text-primary">Breakpoint xl</h5>\r\n                        Browser is larger than 1200px wide.\r\n                    </div>\r\n                </DuxPanel>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n'},77010:(e,t,n)=>{n.r(t),n.d(t,{default:()=>r});const r='import React from \'react\';\r\nimport { DuxYesNoDialog } from \'duxpanel\';\r\n\r\nexport class YesNoDialog extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isDialogOpen: false,\r\n        };\r\n    }\r\n\r\n    onNo = () => {\r\n        this.toggleDialog();\r\n    };\r\n\r\n    onYes = () => {\r\n        this.toggleDialog();\r\n    };\r\n\r\n    toggleDialog = () => {\r\n        this.setState({\r\n            isDialogOpen: !this.state.isDialogOpen,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <DuxYesNoDialog\r\n                    show={this.state.isDialogOpen}\r\n                    title="Yes No Dialog Title"\r\n                    onYes={this.onYes}\r\n                    onNo={this.onNo}\r\n                    yesClassName="btn btn-warning"\r\n                    noClassName="btn btn-primary">\r\n                    Are you sure you want to delete the record?\r\n                </DuxYesNoDialog>\r\n\r\n                <button type="button" className="btn btn-secondary" onClick={this.toggleDialog}>\r\n                    Open Dialog\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n'},22843:function(e,t,n){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.DialogButtonBar=void 0;var o=r(n(67294));t.DialogButtonBar=function(e){for(var t=e.buttonClassName,n=void 0===t?"":t,r=e.statusMsgClassName,a=void 0===r?"":r,s=e.statusMsg,i=void 0===s?"":s,l=function(t){e.onButton&&e.onButton(t)},d=[],u=[],p=function(t){var r,a,s=!0,i=!1,p=n;if("string"==typeof e.buttons[t]?(r=e.buttons[t],a=l):o.default.isValidElement(e.buttons[t])?u.push(e.buttons[t]):"object"==typeof e.buttons[t]&&(r=e.buttons[t].label,a=e.buttons[t].onClick?e.buttons[t].onClick:l,e.buttons[t].className&&(p=e.buttons[t].className),e.buttons[t].type&&e.buttons[t].type,e.buttons[t].align&&"left"===e.buttons[t].align&&(s=!1),e.buttons[t].disabled&&(i=!0)),void 0!==r){var c=o.default.createElement("button",{key:r,className:p,style:{marginLeft:10,marginRight:10},onClick:function(){return a(r)},disabled:i},r);s?u.push(c):d.push(c)}},c=0;c<e.buttons.length;c++)p(c);return o.default.createElement("div",{className:"duxdialogbuttonbar clearfix"},o.default.createElement("div",{style:{width:"100%"}},o.default.createElement("div",{style:{float:"left"}},o.default.createElement("span",{className:a},i),d),o.default.createElement("div",{style:{float:"right"}},u)))}},12860:function(e,t,n){var r=this&&this.__assign||function(){return(r=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var o in t=arguments[n])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var a=o(n(67294)),s=o(n(45697)),i=o(n(55602)),l=n(22843),d=function(e){var t=null;return e.buttons&&(t=a.default.createElement(l.DialogButtonBar,{buttons:e.buttons,onButton:e.onButton,buttonClassName:e.buttonClassName,statusMsg:e.statusMsg,statusMsgClassName:e.statusMsgClassName})),a.default.createElement(i.default,r({footerComponent:t},e),e.icon&&a.default.createElement("div",{style:{float:"left",marginRight:10}},e.icon),e.children)};d.propTypes=r(r({},i.default.propTypes),{buttons:s.default.arrayOf(s.default.oneOfType([s.default.string,s.default.object,s.default.node])),onButton:s.default.func,icon:s.default.node,buttonClassName:s.default.string,statusMsg:s.default.string,statusMsgClassName:s.default.string}),d.defaultProps=r(r({},i.default.defaultProps),{footerBorder:!0,allowClose:!1,clickToDismiss:!1,buttonClassName:"",top:50,slideInFrom:"top",slideOutTo:"top",statusMsg:"",statusMsgClassName:""}),t.default=d},52384:function(e,t,n){var r,o=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),a=this&&this.__assign||function(){return(a=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var o in t=arguments[n])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var i=s(n(67294)),l=s(n(45697)),d=s(n(12860)),u=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.onCancel=function(){t.props.onCancel&&t.props.onCancel()},t.onOk=function(){if(t.props.onOk){if(t.props.shouldClose&&!t.props.shouldClose())return;t.props.onOk()}},t}return o(t,e),t.prototype.render=function(){var e=this,t=[{label:"Ok",onClick:this.onOk,className:this.props.okClassName,disabled:this.props.okDisabled}];return this.props.showCancel&&t.push({label:"Cancel",onClick:this.onCancel,className:this.props.cancelClassName}),i.default.createElement(d.default,a({},this.props,{buttons:t,onClose:this.onCancel,onEscPressed:function(){e.props.allowEsc&&e.onCancel()},onEnterPressed:function(){e.props.allowEnter&&e.onOk()}}),this.props.children)},t}(i.default.Component);u.propTypes=a(a({},d.default.propTypes),{showCancel:l.default.bool,onCancel:l.default.func,onOk:l.default.func,allowEsc:l.default.bool,allowEnter:l.default.bool,buttons:l.default.array,shouldClose:l.default.func,cancelClassName:l.default.string,okClassName:l.default.string,okDisabled:l.default.bool}),u.defaultProps=a(a({},d.default.defaultProps),{showCancel:!1,allowClose:!0,allowEsc:!0,allowEnter:!0,cancelClassName:"",okClassName:"",okDisabled:!1}),t.default=u},55602:function(e,t,n){var r,o=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var s=a(n(67294)),i=a(n(45697)),l=n(29201),d=a(n(93096)),u=function(e){function t(n){var r=e.call(this,n)||this;r.addToModalStack=function(){if(r.props.modal&&0===r.timestamp){var e=new Date;r.timestamp=e.getTime(),t.panelStack.push(r.timestamp)}},r.componentDidUpdate=function(e){if(!e.show&&r.props.show){r.subscribeToEvents(),r.addToModalStack();var n={showInDOM:!0,animationName:l.getAnimationNameShow(r.props)};r.props.modal&&(n.backdropAnimationName="duxpanel-fade-in"),r.setState(n)}else if(e.show&&!r.props.show){document.removeEventListener("keydown",r.onKeyDown,!1),window.removeEventListener("resize",r.throttleResize,!1),window.removeEventListener("mousemove",r.throttleMouseMove,!1),window.removeEventListener("mouseup",r.mouseUp,!1),window.removeEventListener("mousedown",r.mouseDown,!1);var o=l.getAnimationNameHide(r.props);n={};o?(n.animationName=o,setTimeout((function(){r.setState({showInDOM:!1})}),250)):n.showInDOM=!1,r.props.modal&&(t.panelStack.pop(),r.timestamp=0,n.backdropAnimationName="duxpanel-fade-out"),r.setState(n)}},r.mouseDown=function(e){var t,n;if(e.pageX||e.pageY?(t=e.pageX,n=e.pageY):(t=e.clientX+document.body.scrollLeft+document.documentElement.scrollLeft,n=e.clientY+document.body.scrollTop+document.documentElement.scrollTop),r._header){var o=r._header.getBoundingClientRect(),a=l.getElementOffset(r._panel);l.isInsideRect(t,n,a.left,a.top,o.width,o.height)&&(r.btnDown=!0)}},r.mouseMove=function(e){var t,n;if(e.pageX||e.pageY?(t=e.pageX,n=e.pageY):(t=e.clientX+document.body.scrollLeft+document.documentElement.scrollLeft,n=e.clientY+document.body.scrollTop+document.documentElement.scrollTop),r.props.allowDrag)if(r.btnDown){if(!r.dragging){r.dragging=!0;var o=l.getElementOffset(r._panel);r.pos.offsetX=t-o.left,r.pos.offsetY=n-o.top}t-=r.pos.offsetX,n-=r.pos.offsetY,r._panel.style.left=t-document.body.scrollLeft-document.documentElement.scrollLeft+"px",r._panel.style.top=n-document.body.scrollTop-document.documentElement.scrollTop+"px"}else r.dragging=!1},r.mouseUp=function(){r.btnDown=r.dragging=!1},r.onBackdropClick=function(){r.props.onClose()&&r.props.onClose()},r.onKeyDown=function(e){r.props.modal&&t.panelStack[t.panelStack.length-1]===r.timestamp&&(r.props.onEscPressed&&"Escape"===e.key&&r.props.onEscPressed(),r.props.onEnterPressed&&"Enter"===e.key&&r.props.onEnterPressed())},r.panelRef=function(e){e&&r._panel!==e&&(r._panel=e,r.updatePanelPosition(),r.props.show&&(r.subscribeToEvents(),r.addToModalStack()))},r.subscribeToEvents=function(){document.addEventListener("keydown",r.onKeyDown,!1),window.addEventListener("resize",r.throttleResize,!1),window.addEventListener("mousemove",r.throttleMouseMove,!1),window.addEventListener("mousedown",r.mouseDown,!1),window.addEventListener("mouseup",r.mouseUp,!1)},r.updatePanelPosition=function(){if(r._panel){var e=void 0,t=void 0;r.props.center&&(e=window.innerWidth/2-r._panel.offsetWidth/2,t=window.innerHeight/2-r._panel.offsetHeight/2,r.props.left?e=r.props.left:r._panel.style.left=e+"px",r.props.top?t=r.props.top:r._panel.style.top=t+"px")}},r.windowResized=function(){r.props.center&&r.updatePanelPosition(),(r.props.left&&"number"!=typeof r.props.left||r.props.top&&"number"!=typeof r.props.top||r.props.width&&"number"!=typeof r.props.width||r.props.height&&"number"!=typeof r.props.height)&&r.forceUpdate()},r._panel=null,r._header=null,r.btnDown=!1,r.dragging=!1,r.timestamp=0;var o={showInDOM:n.show,backdropAnimationName:"",animationName:n.show?l.getAnimationNameShow(n):""};return r.pos={offsetX:0,offsetY:0},r.state=o,r.throttleMouseMove=d.default(r.mouseMove,20),r.throttleResize=d.default(r.windowResized,50),r}return o(t,e),t.prototype.render=function(){var e=this;if(!this.state.showInDOM)return null;for(var n=0,r=0;r<t.panelStack.length;r++)t.panelStack[r]===this.timestamp&&(n=r+1);var o={zIndex:11+2*n};this.props.animation?o.animation=this.props.animation:this.state.animationName&&(o.animationDuration=".25s",o.animationName=this.state.animationName,o.animationFillMode="forwards",setTimeout((function(){e.setState({animationName:""})}),500)),this.props.left&&(o.left=l.propToPixels(this.props.left,window.innerWidth)),this.props.top&&(o.top=l.propToPixels(this.props.top,window.innerHeight)),this.props.width&&(o.width=l.propToPixels(this.props.width,window.innerWidth)),this.props.height&&(o.height=l.propToPixels(this.props.height,window.innerHeight));var a={zIndex:10+2*n,animation:this.state.backdropAnimationName?this.state.backdropAnimationName+" .25s ease-in-out 0s 1 normal forwards":""};return s.default.createElement("div",null,this.props.modal&&s.default.createElement("div",{className:"duxpanel-backdrop",style:a,onClick:this.props.clickToDismiss?this.onBackdropClick:null}),s.default.createElement("div",{className:"duxpanel",style:o,ref:this.panelRef},this.props.title&&s.default.createElement("div",{ref:function(t){e._header=t},className:"duxpanel-heading"},this.props.title,this.props.allowClose&&this.props.onClose&&s.default.createElement("button",{type:"button",className:"duxpanel-close-button",onClick:this.props.onClose},"×")),s.default.createElement("div",{className:"duxpanel-body"},this.props.children),this.props.footerComponent&&s.default.createElement("div",{className:"duxpanel-footer"},this.props.footerComponent)))},t}(s.default.Component);u.propTypes={left:i.default.oneOfType([i.default.number,i.default.string,i.default.object]),top:i.default.oneOfType([i.default.number,i.default.string,i.default.object]),width:i.default.oneOfType([i.default.number,i.default.string,i.default.object]),height:i.default.oneOfType([i.default.number,i.default.string,i.default.object]),onClose:i.default.func,show:i.default.bool,allowClose:i.default.bool,allowDrag:i.default.bool,onEscPressed:i.default.func,onEnterPressed:i.default.func,modal:i.default.bool,clickToDismiss:i.default.bool,center:i.default.bool,title:i.default.oneOfType([i.default.string,i.default.node]),children:i.default.node,footerComponent:i.default.node,slideInFrom:i.default.string,slideOutTo:i.default.string,fadeIn:i.default.bool,fadeOut:i.default.bool,animation:i.default.string},u.panelStack=[],u.defaultProps={modal:!0,center:!0,allowDrag:!0,allowClose:!0,clickToDismiss:!0,slideInFrom:"",slideOutTo:"",fadeIn:!0,fadeOut:!0,animation:"",show:!1},t.default=u},34443:function(e,t,n){var r=this&&this.__assign||function(){return(r=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var o in t=arguments[n])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)},o=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),s=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&o(t,e,n);return a(t,e),t},i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var l=s(n(67294)),d=i(n(12860));t.default=function(e){var t=e.min,n=void 0===t?0:t,o=e.max,a=void 0===o?0:o,s=e.value,i=void 0===s?0:s,u=e.showAfter,p=void 0===u?0:u,c=e.abortButtonClassName,h=void 0===c?"":c,m=e.allowAbort,f=void 0!==m&&m,g=e.show,b=e.onAbort,w=l.useState(p<1),y=w[0],v=w[1];if(l.useEffect((function(){g?p&&setTimeout((function(){v(!0)}),p):!g&&p>0&&v(!1)}),[g,p]),!g||!y)return null;var x=null;return f&&(x=[{label:"Abort",className:h,onClick:b}]),l.default.createElement(d.default,r({},e,{allowClose:!1,clickToDismiss:!1,buttons:x}),e.children,(n||a||i)&&e.progressComponent&&l.default.createElement(e.progressComponent,{min:n,max:a,value:i}))}},67898:function(e,t,n){var r=this&&this.__assign||function(){return(r=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var o in t=arguments[n])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var a=o(n(67294)),s=o(n(12860));t.default=function(e){var t=[{label:"Yes",className:e.yesClassName,onClick:e.onYes},{label:"No",className:e.noClassName,onClick:e.onNo}];return a.default.createElement(s.default,r({},e,{buttons:t,onClose:e.onNo}),e.children)}},92179:function(e,t,n){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var o=r(n(67294));t.default=function(e){return function(t){return o.default.createElement("div",{className:"progress"},o.default.createElement("div",{className:e,style:{width:Math.round((t.value-t.min)/(t.max-t.min)*100)+"%"},"aria-valuenow":t.value,"aria-valuemin":t.min,"aria-valuemax":t.max}))}}},29201:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.propToPixels=t.dimensionToPixels=t.percentStrToPixels=t.numberStrToNumber=t.isInsideRect=t.getElementOffset=t.getAnimationNameShow=t.getAnimationNameHide=void 0,t.getAnimationNameHide=function(e){var t="";if(e.slideOutTo)switch(e.slideOutTo){case"top":t="duxpanel-slide-out-top";break;case"right":t="duxpanel-slide-out-right";break;case"bottom":t="duxpanel-slide-out-bottom";break;case"left":t="duxpanel-slide-out-left"}else e.fadeOut&&(t="duxpanel-fade-out");return t},t.getAnimationNameShow=function(e){var t="";if(e.slideInFrom)switch(e.slideInFrom){case"top":t="duxpanel-slide-in-top";break;case"right":t="duxpanel-slide-in-right";break;case"bottom":t="duxpanel-slide-in-bottom";break;case"left":t="duxpanel-slide-in-left"}else e.fadeIn&&(t="duxpanel-fade-in");return t},t.getElementOffset=function(e){if(null==e)return{top:0,left:0};var t=e.getBoundingClientRect(),n=e.ownerDocument.defaultView;return null==n?{top:0,left:0}:{top:t.top+n.pageYOffset,left:t.left-n.pageXOffset}},t.isInsideRect=function(e,t,n,r,o,a){return e>=n&&t>=r&&e<=n+o&&t<=r+a};t.numberStrToNumber=function(e){return Math.round(parseFloat(e.replace(/[^0-9.]/g,"")))},t.percentStrToPixels=function(e,t){var n=parseFloat(e.replace(/[^0-9.]/g,""))/100;return Math.round(t*n)},t.dimensionToPixels=function(e,n){return"number"==typeof e?Math.round(e):"string"==typeof(r=e)&&-1!==r.indexOf("%")?t.percentStrToPixels(e,n):function(e){return"string"==typeof e&&(-1!==e.indexOf("px")||!isNaN(parseInt(e)))}(e)?t.numberStrToNumber(e):e;var r},t.propToPixels=function(e,n){return"object"!=typeof e?t.dimensionToPixels(e,n):e.hasOwnProperty("xl")&&n>=1200?t.dimensionToPixels(e.xl,n):e.hasOwnProperty("lg")&&n>=992?t.dimensionToPixels(e.lg,n):e.hasOwnProperty("md")&&n>=768?t.dimensionToPixels(e.md,n):e.hasOwnProperty("sm")&&n>=576?t.dimensionToPixels(e.sm,n):e.hasOwnProperty("xs")?t.dimensionToPixels(e.xs,n):e.hasOwnProperty("sm")?t.dimensionToPixels(e.sm,n):e.hasOwnProperty("md")?t.dimensionToPixels(e.md,n):e.hasOwnProperty("lg")?t.dimensionToPixels(e.lg,n):e.hasOwnProperty("xl")?t.dimensionToPixels(e.xl,n):e}},55310:function(e,t,n){var r,o=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.Animation=void 0;var s=a(n(67294)),i=a(n(49269)),l=n(51480),d=a(n(55602)),u=function(e){function t(t){var n=e.call(this,t)||this;return n.toggleTopPanel=function(){n.setState({topPanelVisible:!n.state.topPanelVisible})},n.toggleRightPanel=function(){n.setState({rightPanelVisible:!n.state.rightPanelVisible})},n.toggleBottomPanel=function(){n.setState({bottomPanelVisible:!n.state.bottomPanelVisible})},n.toggleLeftPanel=function(){n.setState({leftPanelVisible:!n.state.leftPanelVisible})},n.toggleAnimPanel=function(){n.setState({animPanelVisible:!n.state.animPanelVisible,animFrame:0})},n.toggleAnimFrame=function(){var e=n.state.animFrame+1;e>2&&(e=0),n.setState({animFrame:e})},n.state={topPanelVisible:!1,rightPanelVisible:!1,bottomPanelVisible:!1,leftPanelVisible:!1,animPanelVisible:!1,animFrame:0},n}return o(t,e),t.prototype.render=function(){var e="",t="This panel is animated.  Dragging is possible right now.";switch(this.state.animFrame){case 1:e="panel-frame-one",t="Panel completed animation keyframe one.  Dragging is not possible.";break;case 2:e="panel-frame-two",t="Panel completed animation keyframe two.  Dragging is not possible."}e&&(e+=" .5s ease-in-out 0s 1 normal forwards");return s.default.createElement("div",{style:{paddingBottom:25}},s.default.createElement("h4",null,"Demonstration of Entry and Exit Animations"),s.default.createElement("div",null,s.default.createElement("button",{type:"button",className:"btn btn-secondary mr-3",onClick:this.toggleTopPanel},"Sliding From Top"),s.default.createElement("button",{type:"button",className:"btn btn-secondary mr-3",onClick:this.toggleRightPanel},"Sliding From Right"),s.default.createElement("button",{type:"button",className:"btn btn-secondary mr-3",onClick:this.toggleBottomPanel},"Sliding From Bottom"),s.default.createElement("button",{type:"button",className:"btn btn-secondary mr-3",onClick:this.toggleLeftPanel},"Sliding From Left")),s.default.createElement(d.default,{show:this.state.topPanelVisible,title:"DuxPanel Animation Demo",showClose:!0,onClose:this.toggleTopPanel,slideInFrom:"top",slideOutTo:"top",allowDrag:!0,width:"50%",height:"50%",top:"5%"},s.default.createElement("p",null,"This panel slides down from the top")),s.default.createElement(d.default,{show:this.state.rightPanelVisible,title:"DuxPanel Animation Demo",showClose:!0,onClose:this.toggleRightPanel,slideInFrom:"right",slideOutTo:"right",allowDrag:!0,width:"50%",height:"50%",left:"45%"},s.default.createElement("p",null,"This panel slides in from the right")),s.default.createElement(d.default,{show:this.state.bottomPanelVisible,title:"DuxPanel Animation Demo",showClose:!0,onClose:this.toggleBottomPanel,slideInFrom:"bottom",slideOutTo:"bottom",allowDrag:!0,width:"50%",height:"50%",top:"45%"},s.default.createElement("p",null,"This panel slides up from the bottom")),s.default.createElement(d.default,{show:this.state.leftPanelVisible,title:"DuxPanel Animation Demo",showClose:!0,onClose:this.toggleLeftPanel,slideInFrom:"left",slideOutTo:"left",allowDrag:!0,width:"50%",height:"50%",left:"5%"},s.default.createElement("p",null,"This panel slides in from the left")),s.default.createElement("h4",{style:{marginTop:50}},"Demonstration of CSS Animation"),s.default.createElement("button",{type:"button",className:"btn btn-secondary",disabled:this.state.animPanelVisible,onClick:this.toggleAnimPanel},"Open Panel In Starting Position"),s.default.createElement(d.default,{show:this.state.animPanelVisible,title:"DuxPanel Animation Demo",showClose:!0,onClose:this.toggleAnimPanel,allowDrag:!0,width:"25%",height:"25%",center:!0,animation:e},s.default.createElement("p",null,t," Click the Animate button to continue."),s.default.createElement("button",{type:"button",className:"btn btn-primary",onClick:this.toggleAnimFrame},"Animate")),s.default.createElement("div",{className:"alert alert-info mt-3"},"Click the first button to open the panel centered in the browser window. In this starting position, dragging the window is possible. Clicking the Animate button cycles through three positions: the starting position, and two animation keyframes. When the panel has completed one of these two keyframes, dragging is not possible since the ",s.default.createElement("code",null,"animation")," property of the"," ",s.default.createElement("code",null,"DuxPanel")," contains contents. Clicking the Animate button after the panel has completed keyframe two returns the panel back to a non-animated state, allowing dragging to happen again."),s.default.createElement("h4",null,"Example CSS"),s.default.createElement(i.default,{language:"css",style:l.agate},"\n@keyframes panel-frame-one {\n    0% {\n        left: 50px;\n        top: 150px;\n        width: 250px;\n        height: 325px;\n    }\n    100% {\n        left: 550px;\n        top: 350px;\n        width: 400px;\n        height: 200px;\n    }\n}\n\n@keyframes panel-frame-two {\n    0% {\n        left: 550px;\n        top: 350px;\n        width: 400px;\n        height: 200px;\n    }\n    100% {\n        left: 50px;\n        top: 150px;\n        width: 250px;\n        height: 325px;\n    }\n}\n        "))},t}(s.default.Component);t.Animation=u},40826:function(e,t,n){var r=this&&this.__assign||function(){return(r=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var o in t=arguments[n])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)},o=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),s=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&o(t,e,n);return a(t,e),t},i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.App=void 0;var l=s(n(67294)),d=n(66024),u=n(18962),p=i(n(45181)),c=i(n(1773)),h=n(68157),m=i(n(3499)),f=i(n(34028)),g=n(96508),b=i(n(87639)),w=i(n(17026)),y=n(55310),v=i(n(35302)),x=i(n(52374)),D=i(n(61246)),P=n(66373),k=i(n(7025)),C=i(n(87361)),O=n(99438),_=i(n(36988)),N=i(n(50428)),E=n(5178),T=i(n(4555)),S=i(n(77010)),B=n(60089),A=i(n(52063)),j=i(n(70997)),I=[{topic:"intro",html:p.default},{topic:"gettingstarted",html:c.default},{topic:"basics",component:l.default.createElement(h.Basics,null),html:m.default,source:f.default},{topic:"responsive",component:l.default.createElement(g.Responsive,null),html:b.default,source:w.default},{topic:"animation",component:l.default.createElement(y.Animation,null),html:v.default,source:x.default},{topic:"reference",html:D.default},{topic:"dialog",component:l.default.createElement(P.Dialog,null),html:k.default,source:C.default},{topic:"okdialog",component:l.default.createElement(O.OkDialog,null),html:_.default,source:N.default},{topic:"yesnodialog",component:l.default.createElement(E.YesNoDialog,null),html:T.default,source:S.default},{topic:"progressdialog",component:l.default.createElement(B.ProgressDialog,null),html:A.default,source:j.default}];t.App=function(){var e=l.useState("intro"),t=e[0],n=e[1],o=I.map((function(e){return l.default.createElement(d.Topic,r({key:e.topic,show:e.topic===t},r({},e)))}));return l.default.createElement("div",{className:"container"},l.default.createElement(u.NavBar,r({},{topicClicked:function(e){return n(e)}})),o)}},68157:function(e,t,n){var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return o(t,e),t},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.Basics=void 0;var i=a(n(67294)),l=s(n(55602));t.Basics=function(){var e=i.useState(!1),t=e[0],n=e[1],r=function(){n(!t)};return i.default.createElement("div",null,i.default.createElement("button",{type:"button",className:"btn btn-secondary",onClick:r},"Open Panel"),i.default.createElement(l.default,{show:t,title:"Basic DuxPanel",width:400,height:300,onClose:r},i.default.createElement("p",null,"This is a basic DuxPanel")))}},66373:function(e,t,n){var r,o=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.Dialog=void 0;var s=a(n(67294)),i=n(67814),l=a(n(12860)),d=function(e){function t(t){var n=e.call(this,t)||this;return n.onDialogButton=function(e){alert(e+" clicked (default handler)")},n.onButton2Click=function(){alert("Button 2 clicked (Button 2 specific handler)")},n.toggleDialog=function(){n.setState({isDialogOpen:!n.state.isDialogOpen})},n.state={isDialogOpen:!1},n}return o(t,e),t.prototype.render=function(){var e=s.default.createElement(i.FontAwesomeIcon,{icon:"info-circle",className:"text-info",style:{fontSize:36}});return s.default.createElement("div",null,s.default.createElement(l.default,{show:this.state.isDialogOpen,onClose:this.toggleDialog,title:"Dialog title",icon:e,onButton:this.onDialogButton,allowClose:!0,onEscPressed:this.toggleDialog,width:600,buttonClassName:"btn btn-primary",buttons:["Button 1",{label:"Button 2",onClick:this.onButton2Click,className:"btn btn-warning"},{label:"Button Left",className:"btn btn-danger",align:"left"},s.default.createElement("button",{key:"Button 3",type:"button",className:"btn btn-success",style:{marginLeft:10,marginRight:10},onClick:function(){return alert("Button 3 clicked")}},"Button 3")]},s.default.createElement("p",null,"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras varius metus enim, sit amet feugiat enim pharetra at."),s.default.createElement("p",null,"Click the 'x' or press Escape to close the dialog.")),s.default.createElement("button",{type:"button",className:"btn btn-secondary",onClick:this.toggleDialog},"Open Dialog"))},t}(s.default.Component);t.Dialog=d},18962:function(e,t,n){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.NavBar=void 0;var o=r(n(67294));t.NavBar=function(e){var t=e.topicClicked;return o.default.createElement("nav",{className:"navbar navbar-dark navbar-expand-lg"},o.default.createElement("a",{className:"navbar-brand",href:"#"},o.default.createElement("img",{src:"duxpanel.png",height:30,className:"d-inline-block align-top mr-2"})),o.default.createElement("button",{className:"navbar-toggler",type:"button","data-toggle":"collapse","data-target":"#navbar"},o.default.createElement("span",{className:"navbar-toggler-icon"})),o.default.createElement("div",{className:"collapse navbar-collapse",id:"navbar"},o.default.createElement("ul",{className:"navbar-nav mr-auto"},o.default.createElement("li",{className:"nav-item"},o.default.createElement("a",{className:"nav-link",href:"#",onClick:function(e){e.preventDefault(),t("intro")}},"Welcome")),o.default.createElement("li",{className:"nav-item"},o.default.createElement("a",{className:"nav-link",href:"#",onClick:function(e){e.preventDefault(),t("gettingstarted")}},"Getting Started")),o.default.createElement("li",{className:"nav-item"},o.default.createElement("a",{className:"nav-link",href:"#",onClick:function(e){e.preventDefault(),t("basics")}},"DuxPanel Basics")),o.default.createElement("li",{className:"nav-item dropdown"},o.default.createElement("a",{className:"nav-link dropdown-toggle",href:"#",role:"button","data-toggle":"dropdown","aria-haspopup":!0,"aria-expanded":!1},"Learn More"),o.default.createElement("div",{className:"dropdown-menu"},o.default.createElement("a",{className:"dropdown-item",href:"#",onClick:function(e){e.preventDefault(),t("responsive")}},"Responsive Panels"),o.default.createElement("a",{className:"dropdown-item",href:"#",onClick:function(e){e.preventDefault(),t("animation")}},"Panel Animation"),o.default.createElement("a",{className:"dropdown-item",href:"#",onClick:function(e){e.preventDefault(),t("dialog")}},"DuxDialog"),o.default.createElement("a",{className:"dropdown-item",href:"#",onClick:function(e){e.preventDefault(),t("okdialog")}},"Ok Dialog"),o.default.createElement("a",{className:"dropdown-item",href:"#",onClick:function(e){e.preventDefault(),t("yesnodialog")}},"Yes / No Dialog"),o.default.createElement("a",{className:"dropdown-item",href:"#",onClick:function(e){e.preventDefault(),t("progressdialog")}},"Progress Dialog"))),o.default.createElement("li",{className:"nav-item"},o.default.createElement("a",{className:"nav-link",href:"#",onClick:function(e){e.preventDefault(),t("reference")}},"Reference")))))}},99438:function(e,t,n){var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return o(t,e),t},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.OkDialog=void 0;var i=a(n(67294)),l=s(n(52384));t.OkDialog=function(){var e=i.useState(!1),t=e[0],n=e[1],r=i.useState(!1),o=r[0],a=r[1],s=i.useRef(null),d=function(){n(!t),a(!1)};return i.default.createElement("div",null,i.default.createElement(l.default,{show:t,title:"Ok Dialog Title",width:400,showCancel:!0,onOk:function(){return d()},onCancel:function(){return d()},shouldClose:function(){return!!s.current&&(s.current.checked||a(!0),s.current.checked)},okClassName:"btn btn-primary",cancelClassName:"btn btn-warning"},"I Agree: ",i.default.createElement("input",{type:"checkbox",ref:s}),i.default.createElement("p",null,"Your order is ready to submit."),o&&i.default.createElement("p",{className:"text-danger"},"You must agree to the terms")),i.default.createElement("button",{type:"button",className:"btn btn-secondary",onClick:d},"Open Dialog"))}},60089:function(e,t,n){var r,o=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.ProgressDialog=void 0;var s=a(n(67294)),i=a(n(34443)),l=a(n(92179)),d=function(e){return s.default.createElement("div",null,"At ",e.value," out of ",e.max," progress")},u=function(e){function t(t){var n=e.call(this,t)||this;return n.progressBarFixed=l.default("progress-bar"),n.progressBarIndeterminate=l.default("progress-bar progress-bar-striped progress-bar-animated"),n.onCustomAbort=function(){n.setState({isCustomDialogOpen:!1,customProgressValue:5})},n.onFixedAbort=function(){n.setState({isFixedDialogOpen:!1,fixedProgressValue:5})},n.onIndeterminateAbort=function(){n.setState({isIndeterminateOpen:!1})},n.tickCustom=function(){var e=n.state.customProgressValue+1;n.setState({customProgressValue:e}),e<=5?setTimeout(n.tickCustom,1e3):n.setState({isCustomDialogOpen:!1})},n.tickFixed=function(){var e=n.state.fixedProgressValue+1;n.setState({fixedProgressValue:e}),e<=5?setTimeout(n.tickFixed,1e3):n.setState({isFixedDialogOpen:!1})},n.toggleCustomDialog=function(){n.setState({isCustomDialogOpen:!0,customProgressValue:0}),setTimeout(n.tickCustom,1e3)},n.toggleFixedDialog=function(){n.setState({isFixedDialogOpen:!0,fixedProgressValue:0}),setTimeout(n.tickFixed,1e3)},n.toggleIndeterminateOpen=function(){n.setState({isIndeterminateOpen:!0}),setTimeout((function(){n.state.isIndeterminateOpen&&n.setState({isIndeterminateOpen:!1})}),1e4)},n.state={isFixedDialogOpen:!1,isCustomDialogOpen:!1,isIndeterminateOpen:!1,isCustomProgressOpen:!1,fixedProgressValue:0,customProgressValue:0},n}return o(t,e),t.prototype.render=function(){return s.default.createElement("div",null,s.default.createElement(i.default,{show:this.state.isFixedDialogOpen,title:"Please Wait",min:0,max:5,value:this.state.fixedProgressValue,allowAbort:!0,onAbort:this.onFixedAbort,progressComponent:this.progressBarFixed,abortButtonClassName:"btn btn-warning"},s.default.createElement("p",null,"Lorem ipsum dolor sit amet, consectetur adipiscing elit.")),s.default.createElement(i.default,{show:this.state.isCustomDialogOpen,title:"Please Wait",min:0,max:5,value:this.state.customProgressValue,allowAbort:!0,onAbort:this.onCustomAbort,progressComponent:d,abortButtonClassName:"btn btn-warning"},s.default.createElement("p",null,"Lorem ipsum dolor sit amet, consectetur adipiscing elit.")),s.default.createElement(i.default,{show:this.state.isIndeterminateOpen,title:"Please Wait",min:0,max:1,value:1,allowAbort:!0,onAbort:this.onIndeterminateAbort,showAfter:3e3,progressComponent:this.progressBarIndeterminate,abortButtonClassName:"btn btn-warning"},s.default.createElement("p",null,"Lorem ipsum dolor sit amet, consectetur adipiscing elit.")),s.default.createElement("p",null,"This progress bar demonstrates a task that takes 5 seconds to complete. The dialog opens immediately."),s.default.createElement("button",{type:"button",className:"btn btn-secondary",onClick:this.toggleFixedDialog},"Open Dialog"),s.default.createElement("p",{className:"mt-5"},"This progress bar demonstrates a task that takes an unknown amount of time but usually finishes quickly. This would usually be a web service call. The dialog opens after 3 seconds then closes automatically after another 7 seconds if not aborted by the user."),s.default.createElement("button",{type:"button",className:"btn btn-secondary",onClick:this.toggleIndeterminateOpen},"Open Dialog"),s.default.createElement("p",{className:"mt-5"},"This progress bar demonstrates a custom progress bar component."),s.default.createElement("button",{type:"button",className:"btn btn-secondary",onClick:this.toggleCustomDialog},"Open Dialog"))},t}(s.default.Component);t.ProgressDialog=u},96508:function(e,t,n){var r,o=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.Responsive=void 0;var s=a(n(67294)),i=a(n(55602)),l=function(e){function t(t){var n=e.call(this,t)||this;return n.toggleBreakpointPanel=function(){n.setState({isBreakpointOpen:!n.state.isBreakpointOpen})},n.toggleProportionalPanel=function(){n.setState({isProportionalOpen:!n.state.isProportionalOpen})},n.state={isProportionalOpen:!1,isBreakpointOpen:!1},n}return o(t,e),t.prototype.render=function(){return s.default.createElement("div",null,s.default.createElement("button",{type:"button",className:"btn btn-secondary",onClick:this.toggleProportionalPanel},"Open Proportionally Sized Panel"),s.default.createElement("button",{type:"button",className:"btn btn-secondary ml-3",onClick:this.toggleBreakpointPanel},"Open Breakpoint Sized Panel"),s.default.createElement(i.default,{show:this.state.isProportionalOpen,title:"Proportionally Sized DuxPanel",width:"80%",height:"80%",left:"10%",top:"10%",onClose:this.toggleProportionalPanel,allowDrag:!1,center:!1},s.default.createElement("p",null,"This is a proportionally sized DuxPanel. As you resize the browser window the panel will resize to maintain a proportional size.")),s.default.createElement(i.default,{show:this.state.isBreakpointOpen,title:"Breakpoint Sized DuxPanel",onClose:this.toggleBreakpointPanel,allowDrag:!1,center:!0,width:{xs:400,sm:576,md:768,lg:992,xl:1100}},s.default.createElement("p",null,"This panel will adjust its width based on the width of the browser window. Try resizing your browser."),s.default.createElement("div",{className:"d-block d-sm-none"},s.default.createElement("h5",{className:"text-primary"},"Breakpoint xs"),"Browser is less than 576px wide."),s.default.createElement("div",{className:"d-none d-sm-block d-md-none"},s.default.createElement("h5",{className:"text-primary"},"Breakpoint sm"),"Browser is between 576px and 768px wide."),s.default.createElement("div",{className:"d-none d-md-block d-lg-none"},s.default.createElement("h5",{className:"text-primary"},"Breakpoint md"),"Browser is between 768px and 992px wide."),s.default.createElement("div",{className:"d-none d-lg-block d-xl-none"},s.default.createElement("h5",{className:"text-primary"},"Breakpoint lg"),"Browser is between 992px and 1200px wide."),s.default.createElement("div",{className:"d-none d-xl-block"},s.default.createElement("h5",{className:"text-primary"},"Breakpoint xl"),"Browser is larger than 1200px wide.")))},t}(s.default.Component);t.Responsive=l},66024:function(e,t,n){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.Topic=void 0;var o=r(n(67294)),a=r(n(49269)),s=n(51480);t.Topic=function(e){return e.show?o.default.createElement("div",{className:"container"},e.html&&o.default.createElement("div",{dangerouslySetInnerHTML:{__html:e.html}}),e.component&&o.default.createElement("div",{className:"row"},o.default.createElement("div",{className:"col"},e.component)),e.source&&o.default.createElement("div",{className:"row"},o.default.createElement("div",{className:"col"},o.default.createElement("h3",null,"Source Code"),o.default.createElement(a.default,{language:"javascript",style:s.agate},e.source))),o.default.createElement("div",{id:"footer",className:"row mt-3"},o.default.createElement("div",{className:"col"},o.default.createElement("small",null,"Copyright 2018 by Ken Schenke")))):null}},5178:function(e,t,n){var r,o=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.YesNoDialog=void 0;var s=a(n(67294)),i=a(n(67898)),l=function(e){function t(t){var n=e.call(this,t)||this;return n.onNo=function(){n.toggleDialog()},n.onYes=function(){n.toggleDialog()},n.toggleDialog=function(){n.setState({isDialogOpen:!n.state.isDialogOpen})},n.state={isDialogOpen:!1},n}return o(t,e),t.prototype.render=function(){return s.default.createElement("div",null,s.default.createElement(i.default,{show:this.state.isDialogOpen,title:"Yes No Dialog Title",onYes:this.onYes,onNo:this.onNo,yesClassName:"btn btn-warning",noClassName:"btn btn-primary"},"Are you sure you want to delete the record?"),s.default.createElement("button",{type:"button",className:"btn btn-secondary",onClick:this.toggleDialog},"Open Dialog"))},t}(s.default.Component);t.YesNoDialog=l},7818:function(e,t,n){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var o=r(n(67294)),a=n(73935),s=n(78947),i=n(95742);s.library.add(i.faInfoCircle);var l=n(40826);n(75636),a.render(o.default.createElement(l.App,null),document.getElementById("react-container"))}},t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={exports:{}};return e[r].call(o.exports,o,o.exports,n),o.exports}n.m=e,n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.t=function(e,t){if(1&t&&(e=this(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);n.r(r);var o={};if(2&t&&"object"==typeof e&&e)for(const t in e)o[t]=()=>e[t];return o.default=()=>e,n.d(r,o),r},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},(()=>{var e={179:0},t=[[7818,380]],r=()=>{};function o(){for(var r,o=0;o<t.length;o++){for(var a=t[o],s=!0,i=1;i<a.length;i++){var l=a[i];0!==e[l]&&(s=!1)}s&&(t.splice(o--,1),r=n(n.s=a[0]))}return 0===t.length&&(n.x(),n.x=()=>{}),r}n.x=()=>{n.x=()=>{},s=s.slice();for(var e=0;e<s.length;e++)a(s[e]);return(r=o)()};var a=o=>{for(var a,s,[l,d,u,p]=o,c=0,h=[];c<l.length;c++)s=l[c],n.o(e,s)&&e[s]&&h.push(e[s][0]),e[s]=0;for(a in d)n.o(d,a)&&(n.m[a]=d[a]);for(u&&u(n),i(o);h.length;)h.shift()();return p&&t.push.apply(t,p),r()},s=self.webpackChunk_cojam_duxpanel=self.webpackChunk_cojam_duxpanel||[],i=s.push.bind(s);s.push=a})(),n.x()})();